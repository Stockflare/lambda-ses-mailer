{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Lambda function that processes emails received from a Kinesis stream",

  "Parameters" : {

    "FunctionPackage" : {
      "Type" : "String"
    },

    "FunctionDescription" : {
      "Type" : "String",
      "Default" : "Lambda function that processes emails received from a Kinesis stream"
    },

    "FunctionVersion" : {
      "Type" : "String"
    },

    "StackOutputsArn" : {
      "Type" : "String"
    }

  },

  "Resources" : {

    "EnvironmentNew": {
      "Type": "Custom::StackOutputs",
      "Properties": {
        "ServiceToken": { "Ref" : "StackOutputsArn" },
        "StackName" : "environment"
      }
    },

    "KinesesSESStream" : {
      "Type" : "AWS::Kinesis::Stream",
      "Properties" : {
        "ShardCount" : "1"
      }
    },

    "LambdaFunctionRole" : {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": [ "lambda.amazonaws.com" ]
            },
            "Action": [ "sts:AssumeRole" ]
          }]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "root",
            "PolicyDocument": {
              "Version" : "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": [ "arn:aws:logs:*:*:*" ]
                }
              ]
            }
          },
          {
            "PolicyName": "SESFullAccess",
            "PolicyDocument": {
              "Version" : "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": ["ses:SendEmail"],
                  "Resource" : ["*"]
                }
              ]
            }
          },
          {
            "PolicyName": "S3FullAccess",
            "PolicyDocument": {
              "Version" : "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "s3:*",
                  "Resource" : [
                    { "Fn::Join" : ["", ["arn:aws:s3:::", { "Fn::GetAtt" : ["EnvironmentNew", "ResourceBucket" ] }]] },
                    { "Fn::Join" : ["", ["arn:aws:s3:::", { "Fn::GetAtt" : ["EnvironmentNew", "ResourceBucket" ] }, "/*"]] }
                  ]
                }
              ]
            }
          },
          {
            "PolicyName": "KinesisRequiredAccess",
            "PolicyDocument": {
              "Version" : "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "kinesis:GetRecords",
                    "kinesis:GetShardIterator",
                    "kinesis:DescribeStream",
                    "kinesis:ListStreams"
                  ],
                  "Resource" : [{ "Fn::Join" : [ "", [
                    "arn:aws:kinesis:", { "Ref" : "AWS::Region" }, ":",
                    { "Ref" : "AWS::AccountId" }, ":stream/",
                    { "Ref" : "KinesesSESStream" }
                  ]] }]
                }
              ]
            }
          }
        ]
      }
    },

    "LambdaFunction": {
      "Type" : "AWS::Lambda::Function",
      "Properties" : {
        "Description" : { "Ref" : "FunctionDescription" },
        "Runtime" : "nodejs4.3",
        "MemorySize" : "128",
        "Timeout" : "60",
        "Handler" : "index.handler",
        "Role" : {"Fn::GetAtt" : ["LambdaFunctionRole", "Arn"] },
        "Code" : {
          "S3Bucket" : { "Fn::GetAtt" : ["EnvironmentNew", "ResourceBucket"] },
          "S3Key" : { "Fn::Join" : ["", [
            "lambda/", { "Ref" : "FunctionPackage" }, "_", { "Ref" : "FunctionVersion" }, ".zip"
          ]] }
        }
      }
    },

    "LambdaFunctionEventSourceMapping": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "BatchSize" : "1",
        "EventSourceArn" : { "Fn::Join" : [ "", [
          "arn:aws:kinesis:", { "Ref" : "AWS::Region" }, ":",
          { "Ref" : "AWS::AccountId" }, ":stream/",
          { "Ref" : "KinesesSESStream" }]
        ] },
        "FunctionName" : { "Fn::GetAtt" : ["LambdaFunction", "Arn"] },
        "StartingPosition" : "TRIM_HORIZON"
      }
    }

  },

  "Outputs" : {

    "Token" : {
      "Description" : "Send Email via SES from Kinesis Name",
      "Value" : { "Ref" : "LambdaFunction" }
    },
    "SMSMailerToken" : {
      "Description" : "Send Email via SES from Kinesis Name",
      "Value" : { "Ref" : "LambdaFunction" }
    },

    "TokenArn" : {
      "Description" : "Send Email via SES from Kinesis Arn",
      "Value" : { "Fn::GetAtt" : ["LambdaFunction", "Arn"] }
    },

    "SESMailerTokenArn" : {
      "Description" : "Send Email via SES from Kinesis Arn",
      "Value" : { "Fn::GetAtt" : ["LambdaFunction", "Arn"] }
    },

    "StreamName" : {
      "Description" : "Mailer Kinesis Stream Name",
      "Value" : { "Ref" : "KinesesSESStream" }
    },

    "SESMailerStreamName" : {
      "Description" : "Mailer Kinesis Stream Name",
      "Value" : { "Ref" : "KinesesSESStream" }
    },

    "StreamArn" : {
      "Description" : "Mailer Kinesis Stream Name",
      "Value" : { "Fn::Join" : [ "", [
        "arn:aws:kinesis:", { "Ref" : "AWS::Region" }, ":",
        { "Ref" : "AWS::AccountId" }, ":stream/",
        { "Ref" : "KinesesSESStream" }]
      ] }
    },

    "SESMailerStreamArn" : {
      "Description" : "Mailer Kinesis Stream Name",
      "Value" : { "Fn::Join" : [ "", [
        "arn:aws:kinesis:", { "Ref" : "AWS::Region" }, ":",
        { "Ref" : "AWS::AccountId" }, ":stream/",
        { "Ref" : "KinesesSESStream" }]
      ] }
    }

  }
}
